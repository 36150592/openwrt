#!/bin/sh

case "$1" in
	list)
		echo '{ "connect": { "keep": true}, "disconnect" : {"keep": true }, "checkAuto" : {"keep": true }, "changeMode" : {"mode": "Auto" },  "getStatus" : {"keep": true }, "setWANTrafficPolicy": {"policy" : "wan_wan0_wan2"}, "setConnectionTracking": {"enabled" : "1"}, "getPingIP": {"keep":true},  "setPingIP": {"ip":""}}'
	;;
	call)
		case "$2" in
			connect)
				module=$(uci get system.@system[0].hostname)
                                if [ "$module" == "ER1000-VZ" ]; then
					autoreconnect.sh
					ifconfig eth1 up
				else
					killall getInfo
					pid=$(cat /var/run/udhcpc-wwan0.pid)
					kill $pid
					uqmi -d /dev/cdc-wdm0 --stop-network 0xffffffff --autoconnect
					uqmi -d /dev/cdc-wdm0 --start-network internet --autoconnect
					/etc/init.d/getModemInfo boot
					udhcpc -i wwan0 -S -p /var/run/udhcpc-wwan0.pid				
				fi;
				output="{\"stdout\":\"connect\"}"
				echo $output
			;;
			disconnect)
				module=$(uci get system.@system[0].hostname)
                                if [ "$module" == "ER1000-VZ" ]; then
					killall LTEConnect 
					killall slqssdk 
					ifconfig eth1 down
				else
					killall getInfo
					uqmi -d /dev/cdc-wdm0 --stop-network 0xffffffff --autoconnect
					/etc/init.d/getModemInfo boot
				fi;
				output="{\"stdout\":\"disconnect\"}"
				echo $output
			;;
			checkAuto)
				autoconnect=$(uci get modem.@modem[0].autoconnect) 
				if [[ "$autoconnect" == "1" ]]; then
					uci set modem.@modem[0].autoconnect=0
				else
					uci set modem.@modem[0].autoconnect=1
				fi
				uci commit
				output="{\"stdout\":\"checkAuto\"}"
				echo $output
			;;
			changeMode)
				read input;
				killall getInfo
				uqmi -d /dev/cdc-wdm0 --stop-network 0xffffffff --autoconnect
				mode=$(echo $input | sed 's/^.*\"mode\"\:\"//g' | sed 's/ *\".*$//g')
				if [[ "$mode" == "Auto" ]]; then
					uqmi -d /dev/cdc-wdm0 --set-network-modes all
				elif [[ "$mode" == "LTE" ]]; then
					uqmi -d /dev/cdc-wdm0 --set-network-modes lte
				elif [[ "$mode" == "3G" ]]; then
					uqmi -d /dev/cdc-wdm0 --set-network-modes umts
				fi
				uqmi -d /dev/cdc-wdm0 --start-network internet --autoconnect
				/etc/init.d/getModemInfo boot
				pid=$(cat /var/run/udhcpc-wwan0.pid)
				kill $pid
				udhcpc -i wwan0 -S -p /var/run/udhcpc-wwan0.pid
				uci set modem.@modem[0].mode=$mode
				uci commit
				output="{\"stdout\":\"changeMode\"}"
				echo $output
			;;
			setWANTrafficPolicy)
				read input;
				policy=$(echo $input | sed 's/^.*\"policy\"\:\"//g' | sed 's/ *\".*$//g')
				uci set mwan3.default_rule.use_policy="$policy"
				uci commit mwan3
				if [ "$policy" == "wan_wan0_wan2" ]; then
					uci set network.wan.defaultroute="1"
					uci del network.wwan0.defaultroute
					uci del network.wwan1.defaultroute
					uci set network.wan.metric="1"
					uci set network.wwan0.metric="2"
					uci set network.wwan1.metric="3"
					uci commit network
				else
					uci del network.wan.defaultroute
					uci set network.wwan0.defaultroute="1"
					uci set network.wwan1.defaultroute="1"
					uci set network.wan.metric="3"
					uci set network.wwan0.metric="2"
					uci set network.wwan1.metric="1"
					uci commit network
				fi;
				mwan3 restart
				output="{\"stdout\":\"$policy\"}"
				echo $output
			;;
			setConnectionTracking)
				read input;
				enabled=$(echo $input | sed 's/^.*\"enabled\"\:\"//g' | sed 's/ *\".*$//g')
				enabled=${enabled:-1}
				uci set mwan3.wan.enabled="$enabled"
				uci set mwan3.wwan0.enabled="$enabled"
				uci set mwan3.wwan1.enabled="$enabled"
				uci commit mwan3 
				#if [ "$enabled" == "1" ]; then
				#	mwan3 restart 
				#else
				#	mwan3 stop 
				#fi;
				output="{\"stdout\":\"0\"}"
				echo $output
			;;
			getPingIP)
				ip=$(uci get mwan3.wwan1.track_ip);
				output="{\"ip\":\"$ip\"}"
				echo $output
			;;
			setPingIP)
				read input;
				ip=$(echo $input | sed 's/^.*\"ip\"\:\"//g' | sed 's/ *\".*$//g')
				ip=${ip:-8.8.8.8}
				uci delete mwan3.wwan1.track_ip;
				uci delete mwan3.wwan0.track_ip;
				uci add_list mwan3.wwan1.track_ip="$ip";
				uci add_list mwan3.wwan0.track_ip="$ip";
				uci commit
				output="{\"stdout\":\"0\"}"
				echo $output
			;;
			getStatus)
				module=$(uci get system.@system[0].hostname)
				if [ "$module" == "ER1000-VZ" ]; then
                			result=$(/usr/sbin/chat -V -t2 '' AT!GSTATUS? OK '' 2>&1 > /dev/ttyUSB2  < /dev/ttyUSB2)
                			if ifconfig eth1 | grep "inet addr" &> /dev/null; then
                        			status="Connected"
                			else
                        			status="Disconnect"
                			fi

                			mode=$(echo $result | sed 's/^.*System mode\: //g' | sed 's/ *\^IPS.*$//g')
                			if [ "$mode" == "CDMA" ]; then
                        			detectMode="3G"
                			elif [ "$mode" == "LTE" ]; then
                        			detectMode="LTE"
                			else
                        			detectMode=""
                			fi

                			rssi=$(echo $result | sed 's/^.*RSSI //g' | awk '{print$2}' | sed 's/ *\^I\^I.*$//g')
        			else
                			status=$(uqmi -d /dev/cdc-wdm0 --get-data-status | sed 's/\"//g')
                			if [ "$status" == "connected" ]; then
                        			status="Connected"
                			else
                        			status="Disconnect"
                			fi

					mode=$(uqmi -d /dev/cdc-wdm0 --get-signal-info | grep type | awk '{print $2}' | sed -n '2p' | sed 's/ *",.*$//g' | sed 's/^.*"//g')
                			if [[ "$mode" == "lte" ]]; then
                        			detectMode="LTE"
                			else
                        			detectMode="3G"
                			fi

                			rssi=$(uqmi -d /dev/cdc-wdm0 --get-signal-info | grep rssi | awk '{print $2}' | sed -n '2p' | sed 's/ *,.*$//g')
				fi
				output="{\"status\": \"$status\", \"mode\": \"$detectMode\", \"rssi\": \"$rssi\"}"
				echo $output
			;;
		esac
	;;
esac
